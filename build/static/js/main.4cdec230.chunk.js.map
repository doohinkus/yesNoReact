{"version":3,"sources":["secret.js","serviceWorker.js","index.js","App.js"],"names":["key","Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","_useState","useState","_useState2","Object","slicedToArray","result","setAnswer","_useState3","_useState4","response","setResponse","_useState5","_useState6","giph","setGiph","url","link","concat","styles","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","handleRadioButton","e","choices","target","value","split","useEffect","document","title","className","style","onClick","optionA","optionB","Math","round","random","randomGiph","axios","get","then","gif","data","images","fixed_width","catch","error","console","log","type","name","onChange","href","xmlns","width","height","viewBox","class","opacity","d","x","y","id","fill","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4cdec230.chunk.js","sourcesContent":["export const key = \"09ySYIkP0gd9DG6f2IwPfa8G7iYE1arP\";\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { key } from \"./secret.js\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [result, setAnswer] = useState([\"?\", \"??\"]);\n  const [response, setResponse] = useState([\"Yes\", \"No\"]);\n  const [giph, setGiph] = useState(\"\");\n  const hashTags = [\"rafaelIsCoding\", \"yesOrNoOracle\", \"yesNoOracle\"];\n  const url = \"http://yesornooracle.com\";\n  const link = `https://twitter.com/intent/tweet?text=Your answer is ${result}&hashtags=${hashTags}&url=${url}`;\n  const styles = {\n    backgroundImage: `url(${giph})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  };\n\n  useEffect(() => {\n    document.title = `ðŸ˜€: ${result[0] === \"?\" ? \"???\" : result}`;\n  }, []);\n\n  function answer(optionA, optionB) {\n    return Math.round(Math.random()) === 1 ? optionA : optionB;\n  }\n  function handleChange() {\n    const result = answer(response[0], response[1]);\n    setAnswer(result);\n    // api call\n    const giphyUrl = `https://api.giphy.com/v1/gifs/search?`;\n    const randomGiph = Math.round(Math.random() * 25);\n    // 25 gifs\n    axios\n      .get(`${giphyUrl}q=${result}&api_key=${key}`)\n      .then((response) => {\n        const gif = response.data.data[randomGiph].images.fixed_width.url;\n        setGiph(gif);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setGiph(\"\");\n      });\n  }\n  function handleRadioButton(e) {\n    const choices = e.target.value.split(\"-\");\n    setResponse([choices[0], choices[1]]);\n  }\n\n  return (\n    <div className=\"App\" style={styles}>\n      <h1>Yes No Oracle</h1>\n      <h1 className=\"answer\">{result}</h1>\n      <h3>\n        Choice: {response[0]} or {response[1]}\n      </h3>\n      <button onClick={handleChange}>Get Answer</button>\n      <div className=\"choices\">\n        <div className=\"choice\">\n          <input\n            type=\"radio\"\n            name=\"choice\"\n            value=\"Yes-No\"\n            onChange={handleRadioButton}\n          />\n          <p>Yes or No</p>\n        </div>\n        <div className=\"choice\">\n          <input\n            type=\"radio\"\n            name=\"choice\"\n            value=\"Stop-Go\"\n            onChange={handleRadioButton}\n          />\n          <p>Stop or Go</p>\n        </div>\n        <div className=\"choice\">\n          <input\n            type=\"radio\"\n            name=\"choice\"\n            value=\"Heads-Tails\"\n            onChange={handleRadioButton}\n          />\n          <p>Heads or Tails</p>\n        </div>\n      </div>\n      <div className=\"footer\">\n        <a href={link} target=\"_blank\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"30\"\n            height=\"30\"\n            viewBox=\"0 0 24 24\"\n            class=\"twtr-icon\"\n          >\n            <path opacity=\"0\" d=\"M0 0h24v24H0z\"></path>\n            <path d=\"M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z\"></path>\n          </svg>\n        </a>\n        <a href={`https://www.facebook.com/sharer/sharer.php?u=${url}`}>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            x=\"0px\"\n            y=\"0px\"\n            width=\"30px\"\n            height=\"30px\"\n            viewBox=\"0 0 266.893 266.895\"\n            class=\"fcbk-icon\"\n          >\n            <path\n              id=\"Blue_1_\"\n              fill=\"#3C5A99\"\n              d=\"M248.082,262.307c7.854,0,14.223-6.369,14.223-14.225V18.812\n            \tc0-7.857-6.368-14.224-14.223-14.224H18.812c-7.857,0-14.224,6.367-14.224,14.224v229.27c0,7.855,6.366,14.225,14.224,14.225\n            \tH248.082z\"\n            />\n            <path\n              id=\"f\"\n              fill=\"#FFFFFF\"\n              d=\"M182.409,262.307v-99.803h33.499l5.016-38.895h-38.515V98.777c0-11.261,3.127-18.935,19.275-18.935\n            \tl20.596-0.009V45.045c-3.562-0.474-15.788-1.533-30.012-1.533c-29.695,0-50.025,18.126-50.025,51.413v28.684h-33.585v38.895h33.585\n            \tv99.803H182.409z\"\n            />\n          </svg>\n        </a>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}